# Default values for opc-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # Image for the opc router container
  # Has to be either "opcrouter/runtime" for the integrated database
  # or "opcrouter/service", which utilizes the external mongodb
  repository: opcrouter/runtime
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# Add environment variables for the opc router here.
# These will be able to insert themself into the config file for example.
# Have to be added to the list in the following format: 
#  Key: "Value"
# Example:
# EnvVars: [
#   Test: "This"
#   Other: "true"
# ]
EnvVars: []

mongodb:
  deploy: true
  replicaCount: 1
  architecture: replicaset
  replicaSetName: rs0
  directoryPerDB: true
  arbiter:
    enabled: false
  auth:
    enabled: true
    # Secret keys for the mongodb.
    # If the specified secret already exists in the, it will use that.
    # If the secret doesn't exist, it will generate it with autogenerated secret values.
    # When installing this chart multiple times onto the same cluster in the same namespace,
    # be sure to change this value to prevent possible issues caused by this chart collision.
    existingSecret: opc-router-mongodb-password
    # Root password for the mongodb. Will override autogenerated or existing one in secret. Optional.
    dbRootPassword:
    # Replica set key for the mongodb. Will override autogenerated or existing one in secret. Optional.
    dbReplicaKeySet:

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # Type of the service. Possible values: ClusterIP, NodePort, LoadBalancer
  # ClusterIP is the default and means no outside access without port forwarding.
  # NodePort allows outside access on a random or specific (nodePort) Port.
  type: ClusterIP
  # Internal port. The service will be reachable under this port inside the cluster.
  port: 27017
  # External port. When NodePort, this port will allow external access to the service.
  # When left blank, NodePort will chose a random port itself.
  # nodePort needs to be in range 30000 to 32768.
  nodePort:

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# The size of the history of deployments kept for potential rollbacks.
containerHistoryLimit: 10

# Switching this to to true represents accepting the terms and conditions of the end user license agreement.
# If this is false the opc router container won't be able to run.
I_do_accept_the_EULA: false

project:
  # URL to git repository of the opcrouter4 project. Optional. Can be left empty, resulting in no project being loaded.
  projectRepo:
  # Path to the project .rpe file in the repository. Don't begin with '/'. Optional. Can be left out if no projectRepo is provided. 
  projectPath:
  # Path to the projects configuration file. Optional. Not providing it results in no configuration file being loaded.
  configPath:
  auth:
    # An existing secret containing the ssh-key under the key 'project-ssh-key'. Optional.
    # Must be in the same namespace as this application. Takes priority over ssh_key.
    ssh_secret:
    # SSH private key for accessing the git repository. Optional.
    # Line breaks must be represented by '\n'
    ssh_key:
    # If false, the ssh key won't be saved on the cluster and will be deleted from the cluster.
    safe_key: true